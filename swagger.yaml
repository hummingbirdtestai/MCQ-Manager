openapi: 3.0.0
info:
  title: MCQ Manager API
  version: 1.0.0
  description: API documentation for MCQ Manager
servers:
  - url: https://mcq-manager-production.up.railway.app

tags:
  - name: Subjects
  - name: Topics
  - name: Users
  - name: Colleges
  - name: Auth
    description: Authentication via Twilio OTP

paths:
  /auth/otp/start:
    post:
      tags: [Auth]
      summary: Send OTP to phone number using Twilio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "+919876543210"
      responses:
        '200':
          description: OTP sent successfully
        '400':
          description: Phone number is required
        '500':
          description: Failed to send OTP

  /auth/otp/verify:
    post:
      tags: [Auth]
      summary: Verify OTP for a given phone number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "+919876543210"
                code:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: OTP verified successfully
        '400':
          description: Invalid code or phone
        '500':
          description: Failed to verify OTP

  /subjects:
    post:
      tags: [Subjects]
      summary: Create subjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
      responses:
        '201': { description: Subjects created }
    get:
      tags: [Subjects]
      summary: Get all subjects
      responses:
        '200': { description: List of subjects }

  /subjects/{subjectId}/chapters:
    post:
      tags: [Subjects]
      summary: Add chapters and topics to a subject
      parameters:
        - in: path
          name: subjectId
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chapters:
                  type: array
                  items:
                    type: object
                    properties:
                      name: { type: string }
                      topics:
                        type: array
                        items:
                          type: object
                          properties:
                            name: { type: string }
      responses:
        '201': { description: Chapters and topics created }

  /topics/{topicId}/uploads:
    post:
      tags: [Topics]
      summary: Upload or merge steps for a topic (Step 1 to Step 6)
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: object
                  properties:
                    steps:
                      type: array
                      items:
                        type: object
                        properties:
                          step:
                            type: integer
                          content:
                            type: array
                            items:
                              type: object
                              properties:
                                sender:
                                  type: string
                                html:
                                  type: string
                                buzzword:
                                  type: string
                                highYieldPoint:
                                  type: string
                                clarifyingFact:
                                  type: string
      responses:
        '201': { description: Steps uploaded / merged successfully }
    get:
      tags: [Topics]
      summary: Get merged steps for a topic
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Merged steps content
          content:
            application/json:
              schema:
                type: object
                properties:
                  steps:
                    type: array
                    items:
                      type: object
                      properties:
                        step:
                          type: integer
                        content:
                          type: array
                          items:
                            type: object
                            properties:
                              sender:
                                type: string
                              html:
                                type: string
                              buzzword:
                                type: string
                              highYieldPoint:
                                type: string
                              clarifyingFact:
                                type: string
    delete:
      tags: [Topics]
      summary: Delete all uploads for a topic
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
      responses:
        '200': { description: All uploads deleted for this topic }

  /topics/{topicId}/mcqs:
    post:
      tags: [Topics]
      summary: Upload 10 MCQs for a topic
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mcqs:
                  type: array
                  items:
                    type: object
                    properties:
                      learning_gap:
                        type: string
                      stem:
                        type: string
                      options:
                        type: object
                        properties:
                          A:
                            type: string
                          B:
                            type: string
                          C:
                            type: string
                          D:
                            type: string
                          E:
                            type: string
                      correct_answer:
                        type: string
                      explanation:
                        type: string
      responses:
        '201': { description: MCQs uploaded successfully }
        '400': { description: Must upload exactly 10 MCQs }
        '500': { description: Server error }
    get:
      tags: [Topics]
      summary: Get MCQs for a topic
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
      responses:
        '200': { description: List of MCQs }

  /users/register:
    post:
      tags: [Users]
      summary: Register student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
                name:
                  type: string
                photograph_url:
                  type: string
                medical_college_id:
                  type: string
                  format: uuid
                year_of_joining:
                  type: integer
      responses:
        '201': { description: User registered }

  /users/{id}:
    get:
      tags: [Users]
      summary: Get user profile
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: User profile }

  /topics/{topicId}/mcqs/start-test:
    post:
      tags: [Topics]
      summary: Start MCQ test session
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
      responses:
        '200': { description: Test session started }

  /topics/{topicId}/mcqs/{mcqId}/submit:
    post:
      tags: [Topics]
      summary: Submit answer for MCQ with scoring
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
        - in: path
          name: mcqId
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                selected_answer:
                  type: string
                  description: A, B, C, D, E, or S (Skipped)
      responses:
        '200': { description: Answer submitted with score }

  /topics/{topicId}/leaderboard:
    get:
      tags: [Topics]
      summary: Get leaderboard for a topic
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
      responses:
        '200': { description: Leaderboard for the topic }

  /topics/{topicId}/mcqs/{mcqId}/leaderboard-status:
    get:
      tags: [Topics]
      summary: Get leaderboard status for user and MCQ
      parameters:
        - in: path
          name: topicId
          required: true
          schema: { type: string }
        - in: path
          name: mcqId
          required: true
          schema: { type: string }
        - in: query
          name: user_id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Leaderboard and user status }

  /learning-path:
    get:
      tags: [Subjects]
      summary: Get full learning path (subjects → chapters → topics)
      responses:
        '200':
          description: Full learning path structure
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    chapters:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          topics:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string

  /colleges:
    post:
      tags: [Colleges]
      summary: Add medical colleges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  ownership:
                    type: string
                    enum: [Government, Private]
      responses:
        '201': { description: Colleges added successfully }
    get:
      tags: [Colleges]
      summary: Get all medical colleges
      responses:
        '200':
          description: List of medical colleges
